[{"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/index.tsx":"1","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/reportWebVitals.ts":"2","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/App.tsx":"3","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/modules/contacts/components/view-contact/ViewContact.tsx":"4","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/modules/contacts/components/admin/ContactsAdmin.tsx":"5","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/modules/contacts/components/edit-contact/EditContact.tsx":"6","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/modules/contacts/components/add-contact/AddContact.tsx":"7","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/redux/contacts/contacts.actions.ts":"8","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/modules/contacts/services/ContactService.ts":"9","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/index.tsx":"10","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/reportWebVitals.ts":"11","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/App.tsx":"12","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Redux/Store.ts":"13","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Layouts/Navbar.tsx":"14","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Home/Home.tsx":"15","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Redux/RootReducer.ts":"16","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Components/Admin/AddProduct.tsx":"17","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Components/Admin/ProductList.tsx":"18","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Components/Admin/UpdateProduct.tsx":"19","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Components/Products/Component/Products.tsx":"20","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Layouts/Spinner.tsx":"21","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Redux/ReduxComponent/Product.actions.ts":"22","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Redux/ReduxComponent/Product.feature.ts":"23","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Components/Products/Services/ProductsService.ts":"24"},{"size":969,"mtime":1657125412000,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1655996908000,"results":"27","hashOfConfig":"26"},{"size":1424,"mtime":1657121936000,"results":"28","hashOfConfig":"26"},{"size":4252,"mtime":1657209358000,"results":"29","hashOfConfig":"26"},{"size":7289,"mtime":1657210308000,"results":"30","hashOfConfig":"26"},{"size":8153,"mtime":1657210120000,"results":"31","hashOfConfig":"26"},{"size":7047,"mtime":1657209306000,"results":"32","hashOfConfig":"26"},{"size":1786,"mtime":1657210470000,"results":"33","hashOfConfig":"26"},{"size":1098,"mtime":1657126408000,"results":"34","hashOfConfig":"26"},{"size":1104,"mtime":1658135680108,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1655996908000,"results":"37","hashOfConfig":"36"},{"size":1084,"mtime":1657368387504,"results":"38","hashOfConfig":"36"},{"size":223,"mtime":1657285645200,"results":"39","hashOfConfig":"36"},{"size":2987,"mtime":1658220554352,"results":"40","hashOfConfig":"36"},{"size":928,"mtime":1657441731944,"results":"41","hashOfConfig":"36"},{"size":263,"mtime":1657292839856,"results":"42","hashOfConfig":"36"},{"size":4424,"mtime":1657441275816,"results":"43","hashOfConfig":"36"},{"size":6623,"mtime":1657723401792,"results":"44","hashOfConfig":"36"},{"size":5623,"mtime":1657723303708,"results":"45","hashOfConfig":"36"},{"size":4472,"mtime":1657714329923,"results":"46","hashOfConfig":"36"},{"size":413,"mtime":1657272040728,"results":"47","hashOfConfig":"36"},{"size":2227,"mtime":1657712701995,"results":"48","hashOfConfig":"36"},{"size":3627,"mtime":1657712705943,"results":"49","hashOfConfig":"36"},{"size":1100,"mtime":1657779506256,"results":"50","hashOfConfig":"36"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"183vnqv",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12u3a70",{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/index.tsx",[],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/reportWebVitals.ts",[],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/App.tsx",["133"],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/modules/contacts/components/view-contact/ViewContact.tsx",["134","135"],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/modules/contacts/components/admin/ContactsAdmin.tsx",["136"],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/modules/contacts/components/edit-contact/EditContact.tsx",["137","138","139"],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/modules/contacts/components/add-contact/AddContact.tsx",["140","141"],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/redux/contacts/contacts.actions.ts",[],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/modules/contacts/services/ContactService.ts",[],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/index.tsx",[],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/reportWebVitals.ts",[],[],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/App.tsx",[],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Redux/Store.ts",[],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Layouts/Navbar.tsx",["142","143","144","145","146","147"],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Home/Home.tsx",["148","149","150","151"],[],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../Layouts/Navbar\";\n\n\ninterface IProps{}\ninterface IState{}\n\nlet Home:React.FC<IProps> =() =>{\n   \n    return(\n        <>\n            <div className=\"wrapper\">\n                <div className=\"landing\">\n                <div className=\"d-flex flex-column justify-content-center text-center align-items-center h-75 d-inline-block\">\n                <p className=\"text-center display-1 fw-bolder\">Big Basket</p>\n                <p className=\"text-center fs-5 m-4 fw-bold fst-italic\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Neque illum atque aspernatur, molestias temporibus natus, aut autem distinctio nesciunt exercitationem rem, cupiditate laborum iste in saepe dolor. Delectus, ullam sapiente.</p>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n\n}\n\nexport default Home;","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Redux/RootReducer.ts",[],[],"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Components/Admin/AddProduct.tsx",["152","153","154"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../Redux/Store\";\nimport * as productReducer from \"../../Redux/ReduxComponent/Product.feature\"\nimport { useNavigate } from \"react-router-dom\";\nimport * as productAction from \"../../Redux/ReduxComponent/Product.actions\"; \n\ninterface IProps{}\ninterface IState{}\n\nlet AddProduct:React.FC<IProps> =() =>{\n   \n    const dispatch:AppDispatch=useDispatch();\n\n    const navigate = useNavigate();\n\n    let [product, setProduct] = useState({\n        name:\"\",\n        price:\"\",\n        info:\"\",\n        imageUrl:\"\",\n        qty:\"\",\n    })\n\n    let updateInput = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n            setProduct((prevState) => {\n                return {\n                    ...prevState,\n                    [event.target.name]: event.target.value\n                }\n            })\n    }\n\n    useEffect(() => {\n        dispatch(productAction.getAllProductsFromServer);\n    }, [])\n\n    let handleSubmit=(event:React.FormEvent<HTMLFormElement>)=>{\n        event.preventDefault();\n        dispatch(productAction.createProductFromServer(product)).then((response)=>{\n            navigate('/admin');\n        })\n    }\n\n    return(\n        <>\n        {/* <pre>{JSON.stringify(product)}</pre> */}\n            <div className=\"grid\">\n                <div className=\"container\">\n                    <div className=\"row mt-2\">\n                        <div className=\"col\">\n                            <p className=\"display-6 fs-1 fw-bolder text-success\">Create New Product</p>\n                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Explicabo, culpa iste esse animi suscipit earum soluta doloremque, quaerat vitae magni repellat mollitia distinctio quasi! Mollitia laudantium distinctio possimus natus laborum?</p>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-5\">\n                            <div className=\"card shadow-lg\">\n                                <div className=\"card-header buttonDarken\">\n                                    <h3 className=\"fw-bold\">New Product</h3>\n                                </div>\n                                <div className=\"card-body\">\n                                <form onSubmit={handleSubmit}>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control\" name={'name'} value={product.name} onChange={updateInput} placeholder=\"Product Name\"/>\n                                    </div>\n                                    <div className=\"form-group mt-2\">\n                                        <input type=\"text\" className=\"form-control\" name={\"imageUrl\"} value={product.imageUrl} onChange={updateInput} placeholder=\"Product Image Url\"/>\n                                    </div>\n                                    <div className=\"form-group mt-2\">\n                                        <input type=\"number\" className=\"form-control\" name={\"price\"} value={product.price} onChange={updateInput} placeholder=\"Price\"/>\n                                    </div>\n                                    <div className=\"form-group mt-2\">\n                                        <input type=\"number\" className=\"form-control\" name={\"qty\"} value={product.qty} onChange={updateInput} placeholder=\"Available Qty\"/>\n                                    </div>\n                                    <div className=\"form-group mt-2\">\n                                        <textarea className=\"form-control\" name={\"info\"} value={product.info} cols={3} onChange={updateInput} placeholder=\"General Info\"></textarea>\n                                    </div>\n                                    <button type=\"submit\" className=\"btn btn-primary mt-2 buttonDarken\">CREATE</button>\n                                </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-3\">\n                            <img src={product.imageUrl} alt=\"\" className=\"img-fluid\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n\n}\n\nexport default AddProduct;","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Components/Admin/ProductList.tsx",["155","156","157","158","159","160","161"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IProducts } from \"../Products/Models/IProducts\";\nimport ProductsService from \"../Products/Services/ProductsService\";\nimport AddProduct from \"./AddProduct\";\nimport * as productReducer from \"../../Redux/ReduxComponent/Product.feature\"; \nimport { useSelector } from \"react-redux\";\nimport Store, { AppDispatch } from \"../../Redux/Store\";\nimport { useDispatch } from \"react-redux\";\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport Spinner from \"../../Layouts/Spinner\";\nimport * as productAction from \"../../Redux/ReduxComponent/Product.actions\"; \ninterface IProps{}\ninterface IProductState{\n    [productReducer.productFeature]:productReducer.InitialState;\n}\n\nlet ProductList:React.FC<IProps> =() =>{\n\n\n    let productState = useSelector((Store:IProductState)=>{\n        return Store[productReducer.productFeature];\n    });\n    let dispatch:AppDispatch = useDispatch();\n\n    let {loading,errorMessage,products,count} = productState;\n\n    useEffect(()=>{\n        dispatch(productAction.getAllProductsFromServer());\n    },[])\n\n    let deleteProduct=(productId:string|undefined)=>{\n        if(productId){\n            dispatch(productAction.deleteProductFromServer(productId));\n        }\n    }\n\n    const [searchInput, setSearchInput] = useState<string>(\"\")\n    // console.log(products);\n    let searchItems = (event:React.FormEvent<HTMLFormElement>) =>{\n        event.preventDefault();\n        if(searchInput){\n            dispatch(productAction.searchProductsFromServer(searchInput));\n        }\n    }\n\n    let updateInput = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n        setSearchInput(() => event.target.value);\n}\n\n    return(\n        <>\n            <div className=\"grid\">\n                <div className=\"container\">\n                    <div className=\"row m-3\">\n                        <div className=\"col\">\n                            <Link className=\"btn btn-group-vertical btn-danger\" to={\"/admin/add-product\"}>Create Product</Link>\n                        </div>\n                    </div>\n                    <form onSubmit={(e)=>searchItems}>\n                        <div className=\"row m-3\">\n                            <div className=\"col-sm-3\">\n                                <input type=\"text\" onChange={updateInput} name={\"searchKey\"} className=\"form-control\" placeholder=\"Search Contact\"/>\n                            </div>\n                            <div className=\"col\">\n                                <input type=\"submit\" value=\"Search\" className=\"btn btn-outline-dark\"/>\n                            </div>\n                        </div>\n                    </form>\n                    <div className=\"row m-3\">\n                        <div className=\"col\">\n                            <div className=\"\">\n                                <div className=\"\">\n                                    {\n                                        loading && <Spinner/>\n                                    }\n                                    {\n                                        !loading && errorMessage && \n                                        <div className=\"row\">\n                                            <p className=\"text-danger display-6\">{errorMessage.message}</p>\n                                        </div>\n                                    }\n                                    {\n                                        !loading && count === 0 &&\n                                        <div className=\"row\">\n                                            <p className=\"text-danger text-center display-6\">No Data Found</p>\n                                        </div>\n                                    }\n                                    {\n                                        !loading && products && products.length > 0 && \n                                        <table className=\"table table-hover table-bordered text-center\">\n                                            <thead>\n                                                <tr className=\"table-dark\">\n                                                <th>Product Id</th>\n                                                <th>Product</th>\n                                                <th>Name</th>\n                                                <th>Qty</th>\n                                                <th>Price</th>\n                                                <th>Actions</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    products.map((product)=>{\n                                                        return(\n                                                            <tr key={product._id}>\n                                                                <td>{product._id}</td>\n                                                                <td><img className=\"rounded-circle\" height={100} width={100} src={product.imageUrl} alt=\"No Image\" /></td>\n                                                                <td>{product.name}</td>\n                                                                <td>{product.qty}</td>\n                                                                <td> &#8377; {parseInt(product.price).toFixed(2)}</td>\n                                                                <td>\n                                                                <Link className=\"btn btn-primary\" to={`/admin/update-product/${product._id}`} >Update</Link>\n                                                                <button onClick={()=>deleteProduct(product._id)} className=\"btn btn-warning m-2\">Delete</button>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                            </tbody>\n                                        </table>\n                                    }\n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n\n}\n\nexport default ProductList;","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Components/Admin/UpdateProduct.tsx",["162","163","164","165","166"],[],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Store, { AppDispatch } from \"../../Redux/Store\";\nimport * as productReducer from \"../../Redux/ReduxComponent/Product.feature\";\nimport * as productAction from \"../../Redux/ReduxComponent/Product.actions\";\nimport { IProducts } from \"../Products/Models/IProducts\";\nimport {productFeature as productFeatureKey} from \"../../Redux/ReduxComponent/Product.feature\";\n\ninterface IProps{}\n\ninterface IProductState {\n    [productReducer.productFeature]:productReducer.InitialState;\n}\n\nlet UpdateProduct:React.FC<IProps> =() =>{\n\n     let [product, setProduct] = useState<IProducts>({\n        name:\"\",\n        price:\"\",\n        info:\"\",\n        imageUrl:\"\",\n        qty:\"\",\n    })\n\n    let {productId} = useParams();\n    const dispatch:AppDispatch= useDispatch();\n    const navigate = useNavigate();\n\n    let productState = useSelector((Store:IProductState)=>{\n        return Store[productReducer.productFeature];\n    })\n\n    const {loading, errorMessage, product: reduxProduct } = productState;\n\n    const updateInput = (event:React.ChangeEvent<HTMLInputElement|HTMLSelectElement|HTMLTextAreaElement>)=>{\n        setProduct((prevState)=>{\n            return{\n                ...prevState,\n                [event.target.name]:event.target.value\n            }\n        })\n    }\n\n    useEffect(()=>{\n        if(productId){\n            dispatch(productAction.getProductFromServer(productId));\n        }\n    },[productId])\n\n    useEffect(() => {\n        if (Object.keys(reduxProduct).length > 0) {\n            setProduct((prevState) => {\n                return {\n                    ...prevState,\n                    name: reduxProduct.name ? reduxProduct.name : \"\",\n                    imageUrl: reduxProduct.imageUrl ? reduxProduct.imageUrl : \"\",\n                    price: reduxProduct.price ? reduxProduct.price : \"\",\n                    qty: reduxProduct.qty ? reduxProduct.qty : \"\",\n                    info: reduxProduct.info ? reduxProduct.info : \"\"\n                }\n            })\n        }\n    }, [reduxProduct])\n\n    let handleUpdate = (event:React.FormEvent<HTMLFormElement>) =>{\n        event.preventDefault();\n        if(productId){\n            dispatch(productAction.updateProductFromServer({product:product,productId:productId})).then(()=>{\n                navigate(\"/Admin\");\n            })\n        }\n    }\n    return(\n        <>\n        <pre>{JSON.stringify(productState)}</pre>\n            <div className=\"grid\">\n                <div className=\"container\">\n                    <div className=\"row mt-2\">\n                        <div className=\"col\">\n                            <p className=\"display-6 text-success fs-1 fw-bolder\">Update Product</p>\n                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Explicabo, culpa iste esse animi suscipit earum soluta doloremque, quaerat vitae magni repellat mollitia distinctio quasi! Mollitia laudantium distinctio possimus natus laborum?</p>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-5\">\n                            <div className=\"card shadow-lg\">\n                                <div className=\"card-header buttonDarken\">\n                                    <h3>Update Product</h3>\n                                </div>\n                                <div className=\"card-body\">\n                                <form onSubmit={handleUpdate}>\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control\" name={'name'} value={product.name} onChange={updateInput} placeholder=\"Product Name\"/>\n                                    </div>\n                                    <div className=\"form-group mt-2\">\n                                        <input type=\"text\" className=\"form-control\" name={\"imageUrl\"} value={product.imageUrl} onChange={updateInput} placeholder=\"Product Image Url\"/>\n                                    </div>\n                                    <div className=\"form-group mt-2\">\n                                        <input type=\"number\" className=\"form-control\" name={\"price\"} value={product.price} onChange={updateInput} placeholder=\"Price\"/>\n                                    </div>\n                                    <div className=\"form-group mt-2\">\n                                        <input type=\"number\" className=\"form-control\" name={\"qty\"} value={product.qty} onChange={updateInput} placeholder=\"Available Qty\"/>\n                                    </div>\n                                    <div className=\"form-group mt-2\">\n                                        <textarea className=\"form-control\" name={\"info\"} value={product.info} cols={3} onChange={updateInput} placeholder=\"General Info\"></textarea>\n                                    </div>\n                                    <button type=\"submit\" className=\"btn btn-primary mt-2 buttonDarken\">UPDATE</button>\n                                </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-sm-3\">\n                            <img src={product.imageUrl} alt=\"\" className=\"img-fluid\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n\n}\n\nexport default UpdateProduct;","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Components/Products/Component/Products.tsx",["167","168","169","170","171","172"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../../../Layouts/Navbar\";\nimport Spinner from \"../../../Layouts/Spinner\";\nimport { IProducts } from \"../Models/IProducts\";\nimport ProductsService from \"../Services/ProductsService\";\nimport * as productReducer from \"../../../Redux/ReduxComponent/Product.feature\";\nimport { useSelector } from \"react-redux\";\nimport { AppDispatch } from \"../../../Redux/Store\";\nimport { useDispatch } from \"react-redux\";\nimport { productFeature } from \"../../../Redux/ReduxComponent/Product.feature\";\nimport * as productAction from \"../../../Redux/ReduxComponent/Product.actions\";\ninterface IProps{}\ninterface IProductState{\n    [productReducer.productFeature]:productReducer.InitialState;\n}\n\nlet Products:React.FC<IProps> =() =>{\n\n    let dispatch:AppDispatch=useDispatch();\n\n    let productState = useSelector((Store:IProductState)=>{\n        return Store[productFeature];\n    })\n\n    let {loading, products, errorMessage, count} = productState;\n\n    useEffect(() => {\n        // dispatch  an action\n        dispatch(productAction.getAllProductsFromServer());\n    }, []);\n\n\n    return(\n        <>\n            <div className=\"grid\">\n                <div className=\"container\">\n                    <div className=\"row mt-2\">\n                        <div className=\"col\">\n                        <h3>Product Details</h3>\n                        <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sequi quibusdam iusto voluptas, facere alias eos praesentium dicta magnam vero repudiandae ea voluptatem iure consequuntur recusandae labore officiis saepe, reprehenderit repellat!</p>\n                        </div>\n                    </div>\n                    {\n                        loading && <Spinner/>\n                    }\n                    {\n                        !loading && errorMessage &&\n                        <div className=\"container mt-5 display-6\">\n                            <p className=\"text-danger text-center\">{errorMessage?.message}</p>\n                        </div>\n                    }\n                     {\n                        !loading && count === 0 &&\n                        <div className=\"container mt-5 display-6\">\n                            <p className=\"text-danger text-center\">No Data Found</p>\n                        </div>\n                    }\n                    {\n                        !loading && products && products.length > 0 &&\n                        <div className=\"row mt-3 mb-5\">\n                        {\n                            products.map((product)=>{\n                                return(\n                                    <div className=\"col-sm-3\" key={product._id}>\n                                        <div className=\"card shadow-lg mt-2\">\n                                            <div className=\"card-header align-content-center text-center\">\n                                                <img className=\"rounded-circle\" width={120} height={120} src={product.imageUrl} alt=\"\" />\n                                            </div>\n                                            <div className=\"card-body\">\n                                                \n                                                <ul className=\"list-group\">\n                                                    <li className=\"list-group-item\">\n                                                    Name : {product.name}\n                                                    </li>\n                                                    <li className=\"list-group-item\">\n                                                        Price : &#8377; {parseInt(product.price).toFixed(2)}\n                                                    </li>\n                                                    <li className=\"list-group-item\">\n                                                        Qty : {product.qty}\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                        </div>\n                                    </div>\n                                \n                                )\n                            })\n                        }\n                        </div>   \n                    }\n                </div>\n            </div>\n        </>\n    );\n\n}\n\nexport default Products;","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Layouts/Spinner.tsx",["173","174"],[],"import React, { useState } from \"react\";\nimport spiiner from \"../../assets/img/loading.gif\"\n\n\ninterface IProps{}\ninterface IState{}\n\nlet Spinner:React.FC<IProps> =() =>{\n   \n    return(\n        <>\n            <div className=\"grid\">\n                <div className=\"container\">\n                    <img src={spiiner} alt=\"\" />\n                </div>\n            </div>\n        </>\n    );\n\n}\n\nexport default Spinner;","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Redux/ReduxComponent/Product.actions.ts",["175"],[],"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { IProducts } from \"../../Components/Products/Models/IProducts\";\nimport ProductsService from \"../../Components/Products/Services/ProductsService\";\n\n// async action\nexport const getAllProductsFromServer = createAsyncThunk(\"getAllProductFromServer\",async():Promise<any>=>{\n    // const response = await axios.get(`${serverUrl}/products/`);\n    let response = await ProductsService.getAllProducts();\n    return response.data;\n})\n\nexport const getProductFromServer = createAsyncThunk(\"getProductFromServer\",async(productId:string):Promise<any>=>{\n    // const response = await axios.get(`${serverUrl}/products/`);\n    let response = await ProductsService.getProduct(productId);\n    return response.data;\n})\n\nexport const deleteProductFromServer = createAsyncThunk(\"deleteProductFromServer\", async(productId: string, {dispatch}):Promise<any>=>{\n    // const response = await axios.delete(`${serverUrl}/products/${productId}`);\n    let response = await ProductsService.deleteProduct(`${productId}`);\n    if(response){\n        dispatch(getAllProductsFromServer());\n    }\n})\n\nexport const createProductFromServer = createAsyncThunk(\"createProductFromServer\", async(product: IProducts):Promise<any>=>{\n    // const response = await axios.delete(`${serverUrl}/products/${product}`);\n    let response = await ProductsService.createProduct(product);\n    return response.data;\n})\n\nexport const updateProductFromServer = createAsyncThunk(\"updateProductFromServer\", async(payload:{product: IProducts, productId:string}):Promise<any>=>{\n    let {product, productId} = payload;\n    let response = await ProductsService.updateProduct(product,productId);\n    return response.data;\n})\n\n\nexport const searchProductsFromServer = createAsyncThunk(\"searchProductsFromServer\", async(productKey: string):Promise<any>=>{\n    // const response = await axios.delete(`${serverUrl}/products/${productId}`);\n    let response = await ProductsService.getAllProducts();\n    let filterData = response.data;\n    filterData.filter((item:any) => {\n        return Object.values(item).join('').toLowerCase().includes(`${productKey}`.toLowerCase())\n    });\n    return filterData;\n})","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Redux/ReduxComponent/Product.feature.ts",["176","177","178"],[],"import { createAsyncThunk, createSlice, SerializedError } from \"@reduxjs/toolkit\"\nimport axios from \"axios\";\nimport {IProducts} from \"../../Components/Products/Models/IProducts\"\nimport ProductsService from \"../../Components/Products/Services/ProductsService\"\nimport * as productAction from \"./Product.actions\";\n\n\nexport const productFeature = \"productFeature\";\n\nexport interface InitialState{\n    products:IProducts[];\n    product:IProducts;\n    count:number;\n    loading:boolean;\n    errorMessage:SerializedError;\n}\n\nconst initialState:InitialState={\n    loading:false,\n    count:0,\n    products: [] as IProducts[],\n    product: {} as IProducts,\n    errorMessage:{} as SerializedError\n}\n\nexport const productSlice = createSlice({\n    name:\"product Slice\",\n    initialState:initialState,\n    reducers:{},\n    extraReducers:(builder)=>{\n        //get all Products\n        builder.addCase(productAction.getAllProductsFromServer.pending,(state,action)=>{\n            state.loading=true;\n        }).addCase(productAction.getAllProductsFromServer.fulfilled,(state,action)=>{\n            state.products=action.payload['products'];\n            state.count=action.payload['count']\n            state.loading=false;\n        }).addCase(productAction.getAllProductsFromServer.rejected, (state,action)=>{\n            state.loading=false;\n            state.errorMessage=action.error;\n        })\n        \n        //get a Product\n        .addCase(productAction.getProductFromServer.pending,(state,action)=>{\n            state.loading=true;\n        }).addCase(productAction.getProductFromServer.fulfilled,(state,action)=>{\n            state.loading=false;\n            state.product=action.payload;\n        }).addCase(productAction.getProductFromServer.rejected,(state,action)=>{\n            state.loading=false;\n            state.errorMessage=action.error;\n        })\n        \n        //Delete a Product\n        .addCase(productAction.deleteProductFromServer.pending,(state,action)=>{\n            state.loading=true;\n        }).addCase(productAction.deleteProductFromServer.fulfilled,(state,action)=>{\n            state.loading=false;\n        }).addCase(productAction.deleteProductFromServer.rejected,(state,action)=>{\n            state.loading=false;\n            state.errorMessage=action.error;\n        })\n        \n        //Create a Product\n        .addCase(productAction.createProductFromServer.pending,(state,action)=>{\n            state.loading=true;\n        }).addCase(productAction.createProductFromServer.fulfilled,(state,action)=>{\n            state.loading=false;\n        }).addCase(productAction.createProductFromServer.rejected,(state,action)=>{\n            state.loading=false;\n            state.errorMessage=action.error;\n        })\n\n        //Update a Product\n        .addCase(productAction.updateProductFromServer.pending,(state,action)=>{\n            state.loading=true;\n        }).addCase(productAction.updateProductFromServer.fulfilled,(state,action)=>{\n            state.loading=false;\n        }).addCase(productAction.updateProductFromServer.rejected,(state,action)=>{\n            state.loading=false;\n            state.errorMessage=action.error;\n        })\n\n        .addCase(productAction.searchProductsFromServer.pending,(state,action)=>{\n            state.loading=true;\n        }).addCase(productAction.searchProductsFromServer.fulfilled,(state,action)=>{\n            state.loading=false;\n            state.products = action.payload;\n        }).addCase(productAction.searchProductsFromServer.rejected,(state,action)=>{\n            state.loading=false;\n            state.errorMessage=action.error;\n        })\n    }\n})\n\n\n","/home/mallappakadeshanavar/Documents/React Projects/Practice Model/my-app/src/Modules/Components/Products/Services/ProductsService.ts",["179","180"],[],"import { rejects } from \"assert\";\nimport axios from \"axios\";\nimport { resolve } from \"path\";\nimport { IProducts } from \"../Models/IProducts\";\n\nclass ProductsService{\n    private static serverUrl:string | undefined = process.env.REACT_APP_JSON_SERVER_URL;\n    \n    /**\n     * get All Products\n     */\n    public static getAllProducts() {\n        return axios.get(`${this.serverUrl}`);\n    }\n\n    /**\n     * get a Product\n     */\n     public static getProduct(productId:string|undefined) {\n        return axios.get(`${this.serverUrl}/${productId}`);\n    }\n\n    /**\n     * Delete Product\n     */\n    public static deleteProduct(productId:string | undefined){\n        return axios.delete(`${this.serverUrl}/${productId}`);\n    }\n\n    /**\n     * Create Product\n     */\n    public static createProduct(product:IProducts){\n        return axios.post(`${this.serverUrl}/add`, product);\n    }\n\n    /**\n     * Update Product\n     */\n     public static updateProduct(product:IProducts,productId:string){\n        return axios.put(`${this.serverUrl}/${productId}`,product);\n    }\n}\n\nexport default ProductsService;",{"ruleId":"181","severity":1,"message":"182","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":14},{"ruleId":"181","severity":1,"message":"185","line":11,"column":11,"nodeType":"183","messageId":"184","endLine":11,"endColumn":17},{"ruleId":"186","severity":1,"message":"187","line":34,"column":8,"nodeType":"188","endLine":34,"endColumn":19,"suggestions":"189"},{"ruleId":"186","severity":1,"message":"190","line":23,"column":8,"nodeType":"188","endLine":23,"endColumn":10,"suggestions":"191"},{"ruleId":"181","severity":1,"message":"185","line":15,"column":11,"nodeType":"183","messageId":"184","endLine":15,"endColumn":17},{"ruleId":"192","severity":1,"message":"193","line":18,"column":38,"nodeType":"194","messageId":"195","endLine":18,"endColumn":40},{"ruleId":"186","severity":1,"message":"190","line":65,"column":8,"nodeType":"188","endLine":65,"endColumn":19,"suggestions":"196"},{"ruleId":"192","severity":1,"message":"193","line":15,"column":37,"nodeType":"194","messageId":"195","endLine":15,"endColumn":39},{"ruleId":"186","severity":1,"message":"190","line":59,"column":8,"nodeType":"188","endLine":59,"endColumn":10,"suggestions":"197"},{"ruleId":"181","severity":1,"message":"185","line":6,"column":11,"nodeType":"183","messageId":"184","endLine":6,"endColumn":17},{"ruleId":"198","severity":1,"message":"199","line":21,"column":15,"nodeType":"200","messageId":"195","endLine":21,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":49,"column":29,"nodeType":"203","endLine":49,"endColumn":184},{"ruleId":"201","severity":1,"message":"204","line":53,"column":33,"nodeType":"203","endLine":53,"endColumn":71},{"ruleId":"201","severity":1,"message":"204","line":54,"column":33,"nodeType":"203","endLine":54,"endColumn":71},{"ruleId":"201","severity":1,"message":"204","line":56,"column":33,"nodeType":"203","endLine":56,"endColumn":71},{"ruleId":"181","severity":1,"message":"205","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"206","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"207","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":14},{"ruleId":"181","severity":1,"message":"185","line":7,"column":11,"nodeType":"183","messageId":"184","endLine":7,"endColumn":17},{"ruleId":"181","severity":1,"message":"208","line":4,"column":13,"nodeType":"183","messageId":"184","endLine":4,"endColumn":27},{"ruleId":"181","severity":1,"message":"185","line":9,"column":11,"nodeType":"183","messageId":"184","endLine":9,"endColumn":17},{"ruleId":"186","severity":1,"message":"190","line":36,"column":8,"nodeType":"188","endLine":36,"endColumn":10,"suggestions":"209"},{"ruleId":"181","severity":1,"message":"210","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":19},{"ruleId":"181","severity":1,"message":"211","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":23},{"ruleId":"181","severity":1,"message":"212","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":18},{"ruleId":"181","severity":1,"message":"213","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":13},{"ruleId":"181","severity":1,"message":"214","line":10,"column":10,"nodeType":"183","messageId":"184","endLine":10,"endColumn":14},{"ruleId":"186","severity":1,"message":"190","line":30,"column":7,"nodeType":"188","endLine":30,"endColumn":9,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":108,"column":69,"nodeType":"203","endLine":108,"endColumn":166},{"ruleId":"181","severity":1,"message":"213","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":13},{"ruleId":"181","severity":1,"message":"218","line":9,"column":27,"nodeType":"183","messageId":"184","endLine":9,"endColumn":44},{"ruleId":"181","severity":1,"message":"219","line":35,"column":12,"nodeType":"183","messageId":"184","endLine":35,"endColumn":19},{"ruleId":"181","severity":1,"message":"220","line":35,"column":21,"nodeType":"183","messageId":"184","endLine":35,"endColumn":33},{"ruleId":"186","severity":1,"message":"190","line":50,"column":7,"nodeType":"188","endLine":50,"endColumn":18,"suggestions":"221"},{"ruleId":"181","severity":1,"message":"205","line":1,"column":28,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"181","severity":1,"message":"206","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"207","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":14},{"ruleId":"181","severity":1,"message":"210","line":5,"column":10,"nodeType":"183","messageId":"184","endLine":5,"endColumn":19},{"ruleId":"181","severity":1,"message":"211","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":23},{"ruleId":"186","severity":1,"message":"190","line":31,"column":8,"nodeType":"188","endLine":31,"endColumn":10,"suggestions":"222"},{"ruleId":"181","severity":1,"message":"205","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"185","line":6,"column":11,"nodeType":"183","messageId":"184","endLine":6,"endColumn":17},{"ruleId":"181","severity":1,"message":"223","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":13},{"ruleId":"181","severity":1,"message":"224","line":1,"column":10,"nodeType":"183","messageId":"184","endLine":1,"endColumn":26},{"ruleId":"181","severity":1,"message":"223","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":13},{"ruleId":"181","severity":1,"message":"211","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":23},{"ruleId":"181","severity":1,"message":"225","line":1,"column":10,"nodeType":"183","messageId":"184","endLine":1,"endColumn":17},{"ruleId":"181","severity":1,"message":"226","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":17},"@typescript-eslint/no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'IState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'contact' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["227"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["228"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["229"],["230"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'Link' is defined but never used.","'Navbar' is defined but never used.","'productReducer' is defined but never used.",["231"],"'IProducts' is defined but never used.","'ProductsService' is defined but never used.","'AddProduct' is defined but never used.","'Store' is defined but never used.","'type' is defined but never used.",["232"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'productFeatureKey' is defined but never used.","'loading' is assigned a value but never used.","'errorMessage' is assigned a value but never used.",["233"],["234"],"'axios' is defined but never used.","'createAsyncThunk' is defined but never used.","'rejects' is defined but never used.","'resolve' is defined but never used.",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"237","fix":"241"},{"desc":"237","fix":"242"},{"desc":"237","fix":"243"},{"desc":"244","fix":"245"},{"desc":"237","fix":"246"},"Update the dependencies array to be: [contact, contactId, dispatch]",{"range":"247","text":"248"},"Update the dependencies array to be: [dispatch]",{"range":"249","text":"250"},"Update the dependencies array to be: [contactId, dispatch]",{"range":"251","text":"252"},{"range":"253","text":"250"},{"range":"254","text":"250"},{"range":"255","text":"250"},"Update the dependencies array to be: [dispatch, productId]",{"range":"256","text":"257"},{"range":"258","text":"250"},[1317,1328],"[contact, contactId, dispatch]",[1019,1021],"[dispatch]",[2062,2073],"[contactId, dispatch]",[1859,1861],[1055,1057],[1136,1138],[1596,1607],"[dispatch, productId]",[1162,1164]]