{"ast":null,"code":"import axios from 'axios';\nexport class ContactService {\n  static getAllContacts() {\n    return axios.get(`${this.serverUrl}/contacts`);\n  }\n\n  static getContact(contactId) {\n    return axios.get(`${this.serverUrl}/contacts/${contactId}`);\n  }\n\n  static createContact(contact) {\n    return axios.post(`${this.serverUrl}/contacts`, contact);\n  }\n\n  static updateContact(contact, contactId) {\n    return axios.put(`${this.serverUrl}/contacts/${contactId}`, contact);\n  }\n\n  static deleteContact(contactId) {\n    return axios.delete(`${this.serverUrl}/contacts/${contactId}`);\n  }\n\n  static getAllGroups() {\n    return axios.get(`${this.serverUrl}/groups`);\n  }\n\n  static getGroup(contact) {\n    let {\n      groupId\n    } = contact;\n    return axios.get(`${this.serverUrl}/groups/${groupId}`);\n  }\n\n}\nContactService.serverUrl = process.env.REACT_APP_USER_API_URL;","map":{"version":3,"names":["axios","ContactService","getAllContacts","get","serverUrl","getContact","contactId","createContact","contact","post","updateContact","put","deleteContact","delete","getAllGroups","getGroup","groupId","process","env","REACT_APP_USER_API_URL"],"sources":["/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/modules/contacts/services/ContactService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport {IContact} from \"../models/IContact\";\r\n\r\nexport class ContactService {\r\n    private static serverUrl = process.env.REACT_APP_USER_API_URL;\r\n\r\n    public static getAllContacts() {\r\n        return axios.get(`${this.serverUrl}/contacts`);\r\n    }\r\n\r\n    public static getContact(contactId: string) {\r\n        return axios.get(`${this.serverUrl}/contacts/${contactId}`);\r\n    }\r\n\r\n    public static createContact(contact: IContact) {\r\n        return axios.post(`${this.serverUrl}/contacts`, contact);\r\n    }\r\n\r\n    public static updateContact(contact: IContact, contactId: string) {\r\n        return axios.put(`${this.serverUrl}/contacts/${contactId}`, contact);\r\n    }\r\n\r\n    public static deleteContact(contactId: string) {\r\n        return axios.delete(`${this.serverUrl}/contacts/${contactId}`);\r\n    }\r\n\r\n    public static getAllGroups() {\r\n        return axios.get(`${this.serverUrl}/groups`);\r\n    }\r\n\r\n    public static getGroup(contact: IContact) {\r\n        let {groupId} = contact;\r\n        return axios.get(`${this.serverUrl}/groups/${groupId}`);\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,cAAN,CAAqB;EAGI,OAAdC,cAAc,GAAG;IAC3B,OAAOF,KAAK,CAACG,GAAN,CAAW,GAAE,KAAKC,SAAU,WAA5B,CAAP;EACH;;EAEuB,OAAVC,UAAU,CAACC,SAAD,EAAoB;IACxC,OAAON,KAAK,CAACG,GAAN,CAAW,GAAE,KAAKC,SAAU,aAAYE,SAAU,EAAlD,CAAP;EACH;;EAE0B,OAAbC,aAAa,CAACC,OAAD,EAAoB;IAC3C,OAAOR,KAAK,CAACS,IAAN,CAAY,GAAE,KAAKL,SAAU,WAA7B,EAAyCI,OAAzC,CAAP;EACH;;EAE0B,OAAbE,aAAa,CAACF,OAAD,EAAoBF,SAApB,EAAuC;IAC9D,OAAON,KAAK,CAACW,GAAN,CAAW,GAAE,KAAKP,SAAU,aAAYE,SAAU,EAAlD,EAAqDE,OAArD,CAAP;EACH;;EAE0B,OAAbI,aAAa,CAACN,SAAD,EAAoB;IAC3C,OAAON,KAAK,CAACa,MAAN,CAAc,GAAE,KAAKT,SAAU,aAAYE,SAAU,EAArD,CAAP;EACH;;EAEyB,OAAZQ,YAAY,GAAG;IACzB,OAAOd,KAAK,CAACG,GAAN,CAAW,GAAE,KAAKC,SAAU,SAA5B,CAAP;EACH;;EAEqB,OAARW,QAAQ,CAACP,OAAD,EAAoB;IACtC,IAAI;MAACQ;IAAD,IAAYR,OAAhB;IACA,OAAOR,KAAK,CAACG,GAAN,CAAW,GAAE,KAAKC,SAAU,WAAUY,OAAQ,EAA9C,CAAP;EACH;;AA9BuB;AAAff,c,CACMG,S,GAAYa,OAAO,CAACC,GAAR,CAAYC,sB"},"metadata":{},"sourceType":"module"}