{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst serverUrl = process.env.REACT_APP_JSON_SERVER_URL; // async action\n\nexport const getAllProductsFromServer = createAsyncThunk(\"getAllProductFromServer\", async () => {\n  const response = await axios.get(`${serverUrl}/products/`);\n  return response.data;\n});\nexport const deleteProductFromServer = createAsyncThunk(\"deleteProductFromServer\", async (productId, _ref) => {\n  let {\n    dispatch\n  } = _ref;\n  const response = await axios.delete(`${serverUrl}/products/${productId}`);\n\n  if (response) {\n    dispatch(getAllProductsFromServer());\n  }\n});\nexport const createProductFromServer = createAsyncThunk(\"createProductFromServer\", async product => {\n  const response = await axios.delete(`${serverUrl}/products/${product}`);\n  return response.data;\n});\nexport const productFeature = \"productFeature\";\nconst initialState = {\n  loading: false,\n  product: [],\n  errorMessage: {}\n};\nexport const productSlice = createSlice({\n  name: \"product Slice\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getAllProductsFromServer.pending, (state, action) => {\n      state.loading = true;\n    }).addCase(getAllProductsFromServer.fulfilled, (state, action) => {\n      state.product = action.payload;\n      state.loading = false;\n    }).addCase(getAllProductsFromServer.rejected, (state, action) => {\n      state.loading = false;\n      state.errorMessage = action.error;\n    }).addCase(deleteProductFromServer.pending, (state, action) => {\n      state.loading = true;\n    }).addCase(deleteProductFromServer.fulfilled, (state, action) => {\n      state.loading = false;\n    }).addCase(deleteProductFromServer.rejected, (state, action) => {\n      state.loading = false;\n      state.errorMessage = action.error;\n    }).addCase(createProductFromServer.pending, (state, action) => {\n      state.loading = true;\n    }).addCase(createProductFromServer.fulfilled, (state, action) => {\n      state.loading = false;\n    }).addCase(createProductFromServer.rejected, (state, action) => {\n      state.loading = false;\n      state.errorMessage = action.error;\n    });\n  }\n});","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","serverUrl","process","env","REACT_APP_JSON_SERVER_URL","getAllProductsFromServer","response","get","data","deleteProductFromServer","productId","dispatch","delete","createProductFromServer","product","productFeature","initialState","loading","errorMessage","productSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","error"],"sources":["/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/Modules/Redux/ReduxComponent/Product.feature.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, SerializedError } from \"@reduxjs/toolkit\"\nimport axios from \"axios\";\nimport {IProducts} from \"../../Components/Products/Models/IProducts\"\nimport ProductsService from \"../../Components/Products/Services/ProductsService\"\n\nconst serverUrl : string | undefined = process.env.REACT_APP_JSON_SERVER_URL;\n\n// async action\nexport const getAllProductsFromServer = createAsyncThunk(\"getAllProductFromServer\",async():Promise<any>=>{\n    const response = await axios.get(`${serverUrl}/products/`);\n    return response.data;\n})\n\nexport const deleteProductFromServer = createAsyncThunk(\"deleteProductFromServer\", async(productId: string, {dispatch}):Promise<any>=>{\n    const response = await axios.delete(`${serverUrl}/products/${productId}`);\n    if(response){\n        dispatch(getAllProductsFromServer());\n    }\n})\n\nexport const createProductFromServer = createAsyncThunk(\"createProductFromServer\", async(product: IProducts):Promise<any>=>{\n    const response = await axios.delete(`${serverUrl}/products/${product}`);\n    return response.data;\n})\n\nexport const productFeature = \"productFeature\";\n\nexport interface InitialState{\n    product:IProducts[];\n    loading:boolean;\n    errorMessage:SerializedError;\n}\n\nconst initialState:InitialState={\n    loading:false,\n    product: [] as IProducts[],\n    errorMessage:{} as SerializedError\n}\n\nexport const productSlice = createSlice({\n    name:\"product Slice\",\n    initialState:initialState,\n    reducers:{},\n    extraReducers:(builder)=>{\n        builder.addCase(getAllProductsFromServer.pending,(state,action)=>{\n            state.loading=true;\n        }).addCase(getAllProductsFromServer.fulfilled,(state,action)=>{\n            state.product=action.payload;\n            state.loading=false;\n        }).addCase(getAllProductsFromServer.rejected, (state,action)=>{\n            state.loading=false;\n            state.errorMessage=action.error;\n        }).addCase(deleteProductFromServer.pending,(state,action)=>{\n            state.loading=true;\n        }).addCase(deleteProductFromServer.fulfilled,(state,action)=>{\n            state.loading=false;\n        }).addCase(deleteProductFromServer.rejected,(state,action)=>{\n            state.loading=false;\n            state.errorMessage=action.error;\n        }).addCase(createProductFromServer.pending,(state,action)=>{\n            state.loading=true;\n        }).addCase(createProductFromServer.fulfilled,(state,action)=>{\n            state.loading=false;\n        }).addCase(createProductFromServer.rejected,(state,action)=>{\n            state.loading=false;\n            state.errorMessage=action.error;\n        })\n    }\n})\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}