{"ast":null,"code":"var _jsxFileName = \"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/Modules/AdminQuestions/Users.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet Users = _ref => {\n  _s();\n\n  let {\n    questions,\n    sendUserData\n  } = _ref;\n  let [pQuestions, setPQuestions] = useState(\"\"); // setPQuestions(questions);\n\n  let replyRef = useRef();\n\n  let postReply = event => {\n    event.preventDefault(); // let {replyData} = document.forms[0];\n    // sendUserData(replyData.value);\n    // replyData.value = \"\";\n\n    console.log({\n      // every ref will ALWAYS have the \"current\" property, which is the HTML DOM element\n      userName: replyRef.current.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Admin Questions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 29\n                }, this), questions]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Users Replay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  name: \"replay\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    ref: replyData,\n                    name: \"replyData\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: postReply,\n                    className: \"btn btn-success mt-4 text-center align-content-center\",\n                    children: \"Replay Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n};\n\n_s(Users, \"hKPY2dBqdKtAOF08Z7W/KmvYyuk=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useRef","useState","Users","questions","sendUserData","pQuestions","setPQuestions","replyRef","postReply","event","preventDefault","console","log","userName","current","value","replyData"],"sources":["/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/Modules/AdminQuestions/Users.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\n\ninterface IProps{\n    questions:string,\n    sendUserData:(string:any)=>void;\n}\ninterface IState{}\n\nlet Users:React.FC<IProps> =({questions,sendUserData}) =>{\n\n    let [pQuestions , setPQuestions] = useState<string>(\"\");\n    // setPQuestions(questions);\n    let replyRef:any = useRef();\n    let postReply =(event: any)=>{\n        event.preventDefault();\n        // let {replyData} = document.forms[0];\n        // sendUserData(replyData.value);\n        // replyData.value = \"\";\n        console.log({\n            // every ref will ALWAYS have the \"current\" property, which is the HTML DOM element\n            userName: replyRef.current.value\n          });\n    }\n\n    return(\n        <>\n           <div className=\"grid\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h3>Admin Questions</h3>\n                            {questions}\n                        </div>\n                        <div className=\"card-body\">\n                            <h3>Users Replay</h3>\n                            <form name=\"replay\">\n                            <input type=\"text\" ref={replyData} name=\"replyData\" required/>\n                            <button onClick={postReply} className=\"btn btn-success mt-4 text-center align-content-center\">Replay Questions</button>\n                            {/* {\n                                questions && <Users questions={questions}/>\n                            } */}\n                            </form>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n          </div>\n           \n        </>\n    );\n\n}\n\nexport default Users;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;;;AASA,IAAIC,KAAsB,GAAE,QAA6B;EAAA;;EAAA,IAA5B;IAACC,SAAD;IAAWC;EAAX,CAA4B;EAErD,IAAI,CAACC,UAAD,EAAcC,aAAd,IAA+BL,QAAQ,CAAS,EAAT,CAA3C,CAFqD,CAGrD;;EACA,IAAIM,QAAY,GAAGP,MAAM,EAAzB;;EACA,IAAIQ,SAAS,GAAGC,KAAD,IAAc;IACzBA,KAAK,CAACC,cAAN,GADyB,CAEzB;IACA;IACA;;IACAC,OAAO,CAACC,GAAR,CAAY;MACR;MACAC,QAAQ,EAAEN,QAAQ,CAACO,OAAT,CAAiBC;IAFnB,CAAZ;EAIH,CATD;;EAWA,oBACI;IAAA,uBACG;MAAK,SAAS,EAAC,MAAf;MAAA,uBACC;QAAK,SAAS,EAAC,WAAf;QAAA,uBACI;UAAK,SAAS,EAAC,KAAf;UAAA,uBACI;YAAK,SAAS,EAAC,KAAf;YAAA,uBACA;cAAK,SAAS,EAAC,MAAf;cAAA,wBACI;gBAAK,SAAS,EAAC,aAAf;gBAAA,wBACI;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,EAEKZ,SAFL;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAKI;gBAAK,SAAS,EAAC,WAAf;gBAAA,wBACI;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,eAEI;kBAAM,IAAI,EAAC,QAAX;kBAAA,wBACA;oBAAO,IAAI,EAAC,MAAZ;oBAAmB,GAAG,EAAEa,SAAxB;oBAAmC,IAAI,EAAC,WAAxC;oBAAoD,QAAQ;kBAA5D;oBAAA;oBAAA;oBAAA;kBAAA,QADA,eAEA;oBAAQ,OAAO,EAAER,SAAjB;oBAA4B,SAAS,EAAC,uDAAtC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAFA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QALJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA;EADH,iBADJ;AA8BH,CA9CD;;GAAIN,K;;KAAAA,K;AAgDJ,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}