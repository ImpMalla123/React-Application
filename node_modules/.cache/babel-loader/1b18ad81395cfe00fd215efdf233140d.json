{"ast":null,"code":"var _jsxFileName = \"/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/components/EmployeeRedux.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport * as employeeReducer from \"../Redux/Employee/employee.feature\";\nimport { employeeFeature } from \"../Redux/Employee/employee.feature\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet EmployeeRedux = () => {\n  _s();\n\n  // let [state, setState] = useState<IState>({\n  //     employees:EmployeeService.getAllEmployee()\n  // });\n  let dispatch = useDispatch();\n  let employees = useSelector(Store => {\n    return Store[employeeFeature];\n  });\n  let {\n    employee\n  } = employees;\n\n  let dispalyRecords = id => {\n    dispatch({\n      type: employeeReducer.dispalyRecords,\n      plyload: {\n        id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: JSON.stringify(employee) // employees.map((employee)=>{\n              //     return(\n              //         <li className=\"list-group-item\" key={employee.id}>\n              //             <input onChange={()=>dispalyRecords(employee.id)} type=\"checkbox\" className=\"form-check-input me-2\" />\n              //             {employee.name}\n              //         </li>\n              //     )\n              // })\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: JSON.stringify(employee) // employees.map((emp)=>{\n            //     return(\n            //         <div key={emp.id}>\n            //             {\n            //                 emp.isSelected &&\n            //                 <div className=\"card mt-2 shadow-lg\">\n            //                     <div className=\"card-body\">\n            //                         <ul className=\"list-group\">\n            //                             <li className=\"list-group-item\">\n            //                                 {emp.name}\n            //                             </li>\n            //                             <li className=\"list-group-item\">\n            //                                 {emp.email}\n            //                             </li>\n            //                         </ul>\n            //                     </div>\n            //                 </div>\n            //             }\n            //         </div>\n            //     )\n            // })\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(EmployeeRedux, \"yhDDi7TOCRLKjM8n/0blV+S5PDI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EmployeeRedux;\nexport default EmployeeRedux;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeRedux\");","map":{"version":3,"names":["React","useSelector","useDispatch","employeeReducer","employeeFeature","EmployeeRedux","dispatch","employees","Store","employee","dispalyRecords","id","type","plyload","JSON","stringify"],"sources":["/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/components/EmployeeRedux.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { IEmployee } from \"../models/IEmployee\";\nimport * as employeeReducer from \"../Redux/Employee/employee.feature\";\nimport { employeeFeature } from \"../Redux/Employee/employee.feature\";\nimport Store, { AppDispatch } from \"../Redux/Store\";\nimport EmployeeService from \"../services/EmployeeService\";\n\n\ninterface IProps{}\n\ninterface EmplyeeState {\n    [employeeReducer.employeeFeature]:employeeReducer.InitialState;\n}\n\nlet EmployeeRedux:React.FC<IProps> =() =>{\n\n    // let [state, setState] = useState<IState>({\n    //     employees:EmployeeService.getAllEmployee()\n    // });\n\n    let dispatch:AppDispatch=useDispatch();\n\n    let employees = useSelector((Store:EmplyeeState)=>{\n        return Store[employeeFeature]\n    })\n    \n    let {employee} = employees;\n    let dispalyRecords=(id:number)=>{\n        dispatch({\n            type:employeeReducer.dispalyRecords,\n            plyload:{id}\n        })\n    }\n    return(\n        <>\n        <div className=\"grid\">\n            <div className=\"container\">\n                <div className=\"row mt-5\">\n                    <div className=\"col-sm-6\">\n                        <ul className=\"list-group\">\n                            {\n                                JSON.stringify(employee)\n                                // employees.map((employee)=>{\n                                //     return(\n                                //         <li className=\"list-group-item\" key={employee.id}>\n                                //             <input onChange={()=>dispalyRecords(employee.id)} type=\"checkbox\" className=\"form-check-input me-2\" />\n                                //             {employee.name}\n                                //         </li>\n                                //     )\n                                // })\n                            }\n                        </ul>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        {\n                            JSON.stringify(employee)\n                            // employees.map((emp)=>{\n                            //     return(\n                            //         <div key={emp.id}>\n                            //             {\n                            //                 emp.isSelected &&\n                            //                 <div className=\"card mt-2 shadow-lg\">\n                            //                     <div className=\"card-body\">\n                            //                         <ul className=\"list-group\">\n                            //                             <li className=\"list-group-item\">\n                            //                                 {emp.name}\n                            //                             </li>\n                            //                             <li className=\"list-group-item\">\n                            //                                 {emp.email}\n                            //                             </li>\n                            //                         </ul>\n                            //                     </div>\n                            //                 </div>\n                            //             }\n                            //         </div>\n                            //     )\n                            // })\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    );\n\n}\n\nexport default EmployeeRedux;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,KAAKC,eAAZ,MAAiC,oCAAjC;AACA,SAASC,eAAT,QAAgC,oCAAhC;;;;AAWA,IAAIC,aAA8B,GAAE,MAAK;EAAA;;EAErC;EACA;EACA;EAEA,IAAIC,QAAoB,GAACJ,WAAW,EAApC;EAEA,IAAIK,SAAS,GAAGN,WAAW,CAAEO,KAAD,IAAsB;IAC9C,OAAOA,KAAK,CAACJ,eAAD,CAAZ;EACH,CAF0B,CAA3B;EAIA,IAAI;IAACK;EAAD,IAAaF,SAAjB;;EACA,IAAIG,cAAc,GAAEC,EAAD,IAAa;IAC5BL,QAAQ,CAAC;MACLM,IAAI,EAACT,eAAe,CAACO,cADhB;MAELG,OAAO,EAAC;QAACF;MAAD;IAFH,CAAD,CAAR;EAIH,CALD;;EAMA,oBACI;IAAA,uBACA;MAAK,SAAS,EAAC,MAAf;MAAA,uBACI;QAAK,SAAS,EAAC,WAAf;QAAA,uBACI;UAAK,SAAS,EAAC,UAAf;UAAA,wBACI;YAAK,SAAS,EAAC,UAAf;YAAA,uBACI;cAAI,SAAS,EAAC,YAAd;cAAA,UAEQG,IAAI,CAACC,SAAL,CAAeN,QAAf,CAFR,CAGQ;cACA;cACA;cACA;cACA;cACA;cACA;cACA;;YAVR;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAgBI;YAAK,SAAS,EAAC,UAAf;YAAA,UAEQK,IAAI,CAACC,SAAL,CAAeN,QAAf,CAFR,CAGQ;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;;UAvBR;YAAA;YAAA;YAAA;UAAA,QAhBJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADA,iBADJ;AAoDH,CAvED;;GAAIJ,a;UAMyBH,W,EAETD,W;;;KARhBI,a;AAyEJ,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}