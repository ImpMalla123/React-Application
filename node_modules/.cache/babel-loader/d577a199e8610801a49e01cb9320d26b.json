{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport EmployeeService from \"../../services/EmployeeService\";\nexport const employeeFeature = \"employeeFeature\";\nconst initialState = {\n  employee: EmployeeService.getAllEmployee()\n};\nexport const employeeSlice = createSlice({\n  name: \"Employee Slice\",\n  initialState: initialState,\n  reducers: {\n    dispalyRecords: (state, action) => {\n      let id = action.payload;\n      let selectedData = state.employee.map(emp => {\n        if (emp.id === id) {\n          return { ...emp,\n            isSelected: !emp.isSelected\n          };\n        }\n\n        return emp;\n      });\n      state.employee = selectedData;\n    }\n  }\n});\nexport const {\n  dispalyRecords\n} = employeeSlice.actions;","map":{"version":3,"names":["createSlice","EmployeeService","employeeFeature","initialState","employee","getAllEmployee","employeeSlice","name","reducers","dispalyRecords","state","action","id","payload","selectedData","map","emp","isSelected","actions"],"sources":["/home/mallappakadeshanavar/Documents/React Projects/Practice Model/first-app/src/Redux/Employee/employee.feature.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { IEmployee } from \"../../models/IEmployee\";\nimport EmployeeService from \"../../services/EmployeeService\";\n\nexport const employeeFeature = \"employeeFeature\" ;\n\nexport interface InitialState{\n    employee:IEmployee[];\n}\n\nconst initialState:InitialState={\n    employee:EmployeeService.getAllEmployee()\n}\n\nexport const employeeSlice = createSlice({\n    name:\"Employee Slice\",\n    initialState:initialState,\n    reducers:{\n        dispalyRecords:(state,action)=>{\n            let id:number = action.payload;\n            let selectedData = state.employee.map((emp)=>{\n                if(emp.id === id){\n                    return{\n                        ...emp,\n                        isSelected:!emp.isSelected\n                    }\n                }\n                return emp;\n            })\n            state.employee=selectedData;\n        }\n    }\n})\n\nexport const {dispalyRecords} = employeeSlice.actions;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAMP,MAAMC,YAAyB,GAAC;EAC5BC,QAAQ,EAACH,eAAe,CAACI,cAAhB;AADmB,CAAhC;AAIA,OAAO,MAAMC,aAAa,GAAGN,WAAW,CAAC;EACrCO,IAAI,EAAC,gBADgC;EAErCJ,YAAY,EAACA,YAFwB;EAGrCK,QAAQ,EAAC;IACLC,cAAc,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;MAC3B,IAAIC,EAAS,GAAGD,MAAM,CAACE,OAAvB;MACA,IAAIC,YAAY,GAAGJ,KAAK,CAACN,QAAN,CAAeW,GAAf,CAAoBC,GAAD,IAAO;QACzC,IAAGA,GAAG,CAACJ,EAAJ,KAAWA,EAAd,EAAiB;UACb,OAAM,EACF,GAAGI,GADD;YAEFC,UAAU,EAAC,CAACD,GAAG,CAACC;UAFd,CAAN;QAIH;;QACD,OAAOD,GAAP;MACH,CARkB,CAAnB;MASAN,KAAK,CAACN,QAAN,GAAeU,YAAf;IACH;EAbI;AAH4B,CAAD,CAAjC;AAoBP,OAAO,MAAM;EAACL;AAAD,IAAmBH,aAAa,CAACY,OAAvC"},"metadata":{},"sourceType":"module"}